name: Build CI

on:
  push:
    branches:
      - main
    paths-ignore:
        - '**.md'
        - '**.txt'
        - '.github/**'
        - '!.github/workflows/**'
        - "TMessagesProj/src/main/res/values**/**"
        - '.gitignore'
  workflow_dispatch:

jobs:
  build:
    name: Gradle Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check out submodules
        run: |
          git -c submodule."libs/rust".update=none submodule update --init --recursive
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.22.1'
      - name: Get short SHA
        run: |
          echo "SHA7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-stable
          restore-keys: ccache-stable
      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v2
      - name: Prepare Environment
        run: |
            echo "Removing large packages"
            sudo apt-get remove -y '^dotnet-.*' aspnetcore-targeting-pack-6.0 aspnetcore-targeting-pack-7.0
            sudo apt-get remove -y '^llvm-.*'
            sudo apt-get remove -y 'php.*'
            sudo apt-get remove -y '^mongodb-.*'
            sudo apt-get remove -y '^mysql-.*'
            sudo apt-get remove -y azure-cli google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri
            sudo apt-get autoremove -y
            sudo apt-get clean
            echo "Removing large directories"
            sudo rm -rf /usr/share/dotnet/
            sudo rm -rf /usr/local/graalvm/
            sudo rm -rf /usr/local/.ghcup/
            sudo rm -rf /usr/local/share/powershell
            sudo rm -rf /usr/local/share/chromium
            sudo rm -rf /usr/local/lib/node_modules
            df -h

            sudo apt-get install bison gcc make curl ninja-build -y
            echo "y" | sdkmanager --install "ndk;27.0.12077973" --sdk_root=${ANDROID_SDK_ROOT} &> /dev/null
            echo "sdk.dir=${ANDROID_HOME}" >> local.properties
      - name: Release Build
        run: |
          echo -e "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}\nRELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}\nRELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}">>local.properties
          mkdir -p TMessagesProj/config/
          echo "${{ secrets.KEYSTORE }}" | base64 -d > TMessagesProj/config/release.keystore
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > TMessagesProj/google-services.json
          ./gradlew :TMessagesProj:assembleRelease
          echo "APK_FILE=$(find TMessagesProj/build/outputs/apk -name '*arm64*.apk')" >> $GITHUB_ENV

      - uses: actions/upload-artifact@master
        name: Upload apk (arm64-v8a)
        with:
          name: Nnngram-arm64-v8a-${{ env.SHA7 }}
          path: ${{ env.APK_FILE }}

      - name: Upload mapping
        uses: actions/upload-artifact@master
        with:
          name: mapping
          path: TMessagesProj/build/outputs/mapping
